cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[6]],
smooth=FALSE,regLine=FALSE, legend=FALSE,oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[5]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[6]],
smooth=FALSE,regLine=FALSE, legend=FALSE,oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[2]]),pch=1:2,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[6]],
smooth=FALSE,regLine=FALSE, legend=FALSE,oma=c(0,0,8,0),
col=colors)
#legend("top",legend=levels(mtcars1[[2]]),pch=1:2,col=colors,horiz=TRUE,bty="n",
#cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[6]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
#legend("top",legend=levels(mtcars1[[2]]),pch=1:2,col=colors,horiz=TRUE,bty="n",
#cex=1.5,xpd=TRUE)
#preparamos los datos para su análisis
yvars<- cbind(mtcars$mpg, mtcars$disp, mtcars$hp, mtcars$drat,mtcars$wt, mtcars$qsec)
colnames(yvars) <-c("mpg","disp","hp","drat","wt","qsec")
#consideramos como factores algunas variables que no son de naturaleza continua y de ellas tomaremos el numero de caburadores como la variable respuesta
factor_c <-factor(mtcars$carb)
factor_am <-factor(mtcars$am)
factor_cyl <-factor(mtcars$cyl)
factor_vs <-factor(mtcars$vs)
factor_gear <-factor(mtcars$gear)
#creo un conjunto solo con las variables a analizar, esto para facilitar graficas posteriores
mtcars1<-mtcars
mtcars1$cyl <- NULL
mtcars1$vs <- NULL
mtcars1$am <- NULL
mtcars1$gear <- NULL
mtcars1$carb <- NULL
str(mtcars1)
table(mtcars1$carb)
table(mtcars1$factor_c)
#preparamos los datos para su análisis
yvars<- cbind(mtcars$mpg, mtcars$disp, mtcars$hp, mtcars$drat,mtcars$wt, mtcars$qsec)
colnames(yvars) <-c("mpg","disp","hp","drat","wt","qsec")
#consideramos como factores algunas variables que no son de naturaleza continua y de ellas tomaremos el numero de caburadores como la variable respuesta
factor_c <-factor(mtcars$carb)
factor_am <-factor(mtcars$am)
factor_cyl <-factor(mtcars$cyl)
factor_vs <-factor(mtcars$vs)
factor_gear <-factor(mtcars$gear)
#creo un conjunto solo con las variables a analizar, esto para facilitar graficas y validacion de supuestos posteriores
mtcars1<-mtcars
mtcars1$cyl <- NULL
mtcars1$vs <- NULL
mtcars1$am <- NULL
mtcars1$gear <- NULL
#mtcars1$carb <- NULL
str(mtcars1)
table(mtcars1$carb)
table(mtcars$cyl)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[6]]),pch=1:6,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:6,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[6]]),pch=1:5,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:6,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[6]]),pch=1:6,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[6]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[6]]),pch=1:4,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[6]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[6]]),pch=1:5,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[6]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[6]]),pch=1:5,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[6]]),pch=1:5,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:6,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[,[7]]),pch=1:6,col=colors,horiz=TRUE,bty="n",
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:6,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(MVN)
mvn(data =mtcars1[1:6] , univariateTest = "SW", desc = T)
by(mtcars1[,-7], factor_c, var)
install.packages("biotools")
require(biotools)
boxM(mtcars1[,-7],factor_c)
require(biotools)
boxM(mtcars1[,-7],mtcars1$factor_c)
require(biotools)
boxM(mtcars1[,-7],mtcars1$carb)
require(biotools)
boxM(mtcars[,-7],mtcars$carb)
str(mtcars)
summary(mtcars)
require(biotools)
boxM(mtcars[,-11],mtcars$carb)
require(biotools)
boxM(mtcars1[,-7], factor_c)
describe(mtcars1)
?describe
describe(mtcars)
install.packages("psych")
install.packages("psych")
install.packages("psych")
describe(mtcars)
require(psych)
describe(mtcars)
require(psych)
describe(iris)
require(psych)
describe(mtcars1)
#preparamos los datos para su análisis
yvars<- cbind(mtcars$mpg, mtcars$disp, mtcars$hp, mtcars$drat,mtcars$wt, mtcars$qsec)
colnames(yvars) <-c("mpg","disp","hp","drat","wt","qsec")
#consideramos como factores algunas variables que no son de naturaleza continua y de ellas tomaremos el numero de caburadores como la variable respuesta
factor_c <-factor(mtcars$carb)
factor_am <-factor(mtcars$am)
factor_cyl <-factor(mtcars$cyl)
factor_vs <-factor(mtcars$vs)
factor_gear <-factor(mtcars$gear)
#creo un conjunto solo con las variables a analizar, esto para facilitar graficas y validacion de supuestos posteriores
mtcars1<-mtcars
mtcars1$cil<-as.character(mtcars$cyl)
mtcars1$cyl <- NULL
mtcars1$vs <- NULL
mtcars1$am <- NULL
mtcars1$gear <- NULL
mtcars1$carb <- NULL
str(mtcars1)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:6,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
#library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$factor_c),"Dark2")
library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(MVN)
mvn(data =mtcars1[1:6] , univariateTest = "SW", desc = T)
by(mtcars1[,-7], cil, var)
by(mtcars1[,-7], mtcars1$cil, var)
require(biotools)
boxM(mtcars1[,-7], mtcars1$cil)
mma<-manova(yvars ~ cil, data=mtcars1)
mma
summary(mma, test="Wilks")
summary(mma, test="Roy")
summary(mma, test="Hotelling-Lawley")
summary(mma, test="Pillai")
# mtcars$mpg, mtcars$cyl, mtcars$disp, mtcars$hp, mtcars$drat,mtcars$wt, mtcars$qsec, mtcars$gear, mtcars$vs)
modelo1<-aov(mtcars1$mpg ~ cil )
# mtcars$mpg, mtcars$cyl, mtcars$disp, mtcars$hp, mtcars$drat,mtcars$wt, mtcars$qsec, mtcars$gear, mtcars$vs)
modelo1<-aov(mtcars1$mpg ~ mtcars1$cil )
summary(modelo1)
modelo2<-aov(mtcars1$disp ~ mtcars1$cil )
summary(modelo2)
modelo3<-aov(mtcars1$hp ~ mtcars1$cil )
summary(modelo3)
modelo4<-aov(mtcars1$drat ~ mtcars1$cil )
summary(modelo4)
modelo5<-aov(mtcars1$wt ~ mtcars1$cil )
summary(modelo5)
modelo6<-aov(mtcars1$qsec ~ mtcars1$cil )
summary(modelo6)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1$cil,pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
library(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=FALSE,oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
colors
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]]),pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
colors
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1$cil,pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=FALSE, oma=c(0,0,8,0),
col=colors)
legend("top",legend=levels(mtcars1[[7]],pch=1:3,col=colors,horiz=TRUE,bty="n",
cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=FALSE, oma=c(0,0,8,0),
col=colors)
#legend("top",legend=levels(mtcars1[[7]],pch=1:3,col=colors,horiz=TRUE,bty="n",
#cex=1.5,xpd=TRUE)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=T, oma=c(0,0,8,0),
col=colors)
#legend("top",legend=levels(mtcars1[[7]],pch=1:3,col=colors,horiz=TRUE,bty="n",
#cex=1.5,xpd=TRUE)
require(MVN)
mvn(data =mtcars1[1:6] , univariateTest = "SW", desc = T)
by(mtcars1[,-7], mtcars1$cil, var)
require(biotools)
boxM(mtcars1[,-7], mtcars1$cil)
knitr::opts_chunk$set(echo = TRUE)
#preparamos los datos para su análisis, nos vamos a quedar con las variables numericas y como variable respuesta 'cilindors'
yvars<- cbind(mtcars$mpg, mtcars$disp, mtcars$hp, mtcars$drat,mtcars$wt, mtcars$qsec)
colnames(yvars) <-c("mpg","disp","hp","drat","wt","qsec")
#creo un conjunto solo con las variables a analizar, esto para facilitar análisis, graficas y validacion de supuestos posteriores. Convertimos a caracter la variable cilindros
mtcars1<-mtcars
cil<-as.character(mtcars$cyl)
amf <-factor(mtcars$am)
mtcars1$cyl <- NULL
mtcars1$vs <- NULL
mtcars1$gear <- NULL
mtcars1$carb <- NULL
mtcars1$am <- NULL
str(mtcars1)
mma<-manova(yvars ~ amf+cil, data=mtcars1)
mma
# mtcars$mpg, mtcars$cyl, mtcars$disp, mtcars$hp, mtcars$drat,mtcars$wt, mtcars$qsec, mtcars$gear, mtcars$vs)
modelo1<-aov(mtcars1$mpg ~ amf+cil )
summary(modelo1)
modelo2<-aov(mtcars1$disp ~ amf+cil )
summary(modelo2)
modelo3<-aov(mtcars1$hp ~ amf+cil )
summary(modelo3)
modelo4<-aov(mtcars1$drat ~ amf+cil )
summary(modelo4)
modelo5<-aov(mtcars1$wt ~ amf+cil )
summary(modelo5)
modelo6<-aov(mtcars1$qsec ~ amf+cil )
summary(modelo6)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]],
smooth=FALSE,regLine=FALSE, legend=T, oma=c(0,0,8,0),
col=colors)
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]*[8]],
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]+[8]],
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]*[8]],
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7],[8]],
require(RColorBrewer)
colors <- brewer.pal(nlevels(mtcars1$cil),"Dark2")
require(car)
scatterplotMatrix(mtcars1[1:6],groups=mtcars1[[7]]),
plot(mtcars1)
require(MVN)
mvn(data =mtcars1[1:6] , univariateTest = "SW", desc = T)
by(mtcars1[,-7], amf+cil, var)
by(mtcars1[,-7], amf*cil, var)
knitr::opts_chunk$set(echo = TRUE,warning = FALSE, message = FALSE)
library(smacof)
library("smacof")
install.packages("gtools")
library("smacof")
cmdscale(eurodist2, k = 9, eig = TRUE, add = FALSE, x.ret = FALSE)$eig
eurodist2=as.dist(eurodist) #Lo ponemos en la clase dist.
eurodist2
knitr::opts_chunk$set(echo = TRUE,warning = FALSE, message = FALSE)
str(eurodist)
summary(eurodist)
eurodist2=as.dist(eurodist) #Lo ponemos en la clase dist.
eurodist2
library("smacof")
library("smacof")
cmdscale(eurodist2, k = 9, eig = TRUE, add = FALSE, x.ret = FALSE)$eig
resm.eurodist2 <- smacofSym(eurodist2)
#Hacemos MDS métrico.
resm.eurodist2 <- smacofSym(eurodist2,2,)
resm.eurodist2
summary(resm.eurodist2)
plot(resm.eurodist2, main="smacofSym(eurodist2,2)")
library("smacof")
cmdscale(eurodist2, k = 9, eig = TRUE, add = FALSE, x.ret = FALSE)$eig
#Hacemos MDS métrico.
resm.eurodist2 <- smacofSym(eurodist2,2,)
resm.eurodist2
summary(resm.eurodist2)
plot(resm.eurodist2, main="smacofSym(eurodist2,2)")
str(eurodist)
summary(eurodist)
eurodist2=as.dist(eurodist) #Lo ponemos en la clase dist.
eurodist2
library("smacof")
cmdscale(eurodist2, k = 19, eig = TRUE, add = FALSE, x.ret = FALSE)$eig
#Hacemos MDS métrico.
resm.eurodist2 <- smacofSym(eurodist2,2,)
resm.eurodist2
summary(resm.eurodist2)
plot(resm.eurodist2, main="smacofSym(eurodist2,2)")
library("smacof")
cmdscale(eurodist2, k = 20, eig = TRUE, add = FALSE, x.ret = FALSE)$eig
#Hacemos MDS métrico.
resm.eurodist2 <- smacofSym(eurodist2,2,)
resm.eurodist2
summary(resm.eurodist2)
plot(resm.eurodist2, main="smacofSym(eurodist2,2)")
tabla1<-read.csv("tabla1.csv",header = T)
View(tabla1)
tabla1.diss=sim2diss(tabla1,1)
resnm.tabla1=smacofSym(tabla1.diss,ndim=2,metric=FALSE)
tabla1.diss=sim2diss(tabla1,1)
resnm.tabla1=smacofSym(tabla1.diss,ndim=2,metric=F)
resnm.tabla1=smacofSym(tabla1.diss,ndim=2,type="Ordinal")
resnm.tabla1=smacofSym(tabla1.diss,ndim=2,type=c("Ordinal"))
resnm.tabla1=mds(tabla1.diss,ndim=2,type="Ordinal")
resnm.tabla1=mds(tabla1.diss, ndim=2, type = "ordinal")
resnm.tabla1=mds(tabla1, ndim=2, type = "ordinal")
resnm.tabla1
summary(resnm.tabla1)
plot(resnm.tabla1,main='smacofSym(tabla1.diss,ndim=2,metric=FALSE)')
install.packages("RandomFields")
install.packages("geoR")
install.packages("gstat")
getwd()
setwd("C:\Users\franm\OneDrive\Documents\Personales\Javier\Academicos\UGR - Estadistica Aplicada\Materias\22-23\C1 Modelos de respuesta discreta. Aplicaciones biosanitarias - 2223 (COMÚN)\Tema 3 Modelos logit con variables explicativas categóricas")
setwd("C:/Users/franm/OneDrive/Documents/Personales/Javier/Academicos/UGR - Estadistica Aplicada/Materias/22-23/C1 Modelos de respuesta discreta. Aplicaciones biosanitarias - 2223 (COMÚN)/Tema 3 Modelos logit con variables explicativas categóricas")
Chapman.Cuali<-read.csv("Chapman_Cuali.csv",header=T,sep=",")
View(Chapman.Cuali)
is.numeric(Chapman.Cuali$Id)
## [1] TRUE
is.numeric(Chapman.Cuali$Edad)
## [1] TRUE
is.numeric(Chapman.Cuali$Colesterol)
## [1] TRUE
is.factor(Chapman.Cuali$Presion)
## [1] TRUE
is.factor(Chapman.Cuali$IMC)
## [1] TRUE
is.numeric(Chapman.Cuali$Coronarios)
knitr::opts_chunk$set(echo = TRUE)
Chapman.Cuali<-read.csv("Chapman_Cuali.csv",header=T,sep=",")
getwd()
Chapman.Cuali2<-read.csv("Chapman_Cuali.csv",header=T,sep=",")
Chapman.Cuali<-read.csv("Chapman_Cuali.csv",header=T,sep=",")
levels(Chapman.Cuali$Presion)
View(Chapman.Cuali)
is.numeric(Chapman.Cuali$Id)
Chapman.Cuali<-read.csv("Chapman_Cuali.csv",header=T,sep=",")
levels(Chapman.Cuali$Presion)
levels(Chapman.Cuali$IMC)
